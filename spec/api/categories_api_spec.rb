=begin
#Nutanix Prism APIs

#Manage Tasks, Category Associations and Submit Batch Operations.

The version of the OpenAPI document: 4.0

Generated by: https://openapi-generator.tech
Generator version: 7.14.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NutanixPrism::CategoriesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'CategoriesApi' do
  before do
    # run before each test
    @api_instance = NutanixPrism::CategoriesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CategoriesApi' do
    it 'should create an instance of CategoriesApi' do
      expect(@api_instance).to be_instance_of(NutanixPrism::CategoriesApi)
    end
  end

  # unit tests for create_category
  # Create a category 
  # Creates a category with a given key and value pair. 
  # @param prism_v40_config_category 
  # @param [Hash] opts the optional parameters
  # @return [CreateCategory201Response]
  describe 'create_category test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_category_by_id
  # Delete a category 
  # Deletes a category with the given external identifier. 
  # @param ext_id A globally unique identifier of an instance that is suitable for external consumption. 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_category_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_category_by_id
  # Fetch a category 
  # Fetches the details of a category with the given external identifier. 
  # @param ext_id A globally unique identifier of an instance that is suitable for external consumption. 
  # @param [Hash] opts the optional parameters
  # @option opts [String] :expand A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported. - associations - detailedAssociations 
  # @return [GetCategoryById200Response]
  describe 'get_category_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for list_categories
  # List categories 
  # Fetches a list of categories with pagination, filtering, sorting, selection, and optional expansion of associated entity counts. 
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page A URL query parameter that specifies the page number of the result set. It must be a positive integer between 0 and the maximum number of pages that are available for that resource. Any number out of this range might lead to no results. 
  # @option opts [Integer] :limit A URL query parameter that specifies the total number of records returned in the result set.  Must be a positive integer between 1 and 100. Any number out of this range will lead to a validation error. If the limit is not provided, a default value of 50 records will be returned in the result set. 
  # @option opts [String] :filter A URL query parameter that allows clients to filter a collection of resources. The expression specified with $filter is evaluated for each resource in the collection, and only items where the expression evaluates to true are included in the response. Expression specified with the $filter must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. For example, filter &#39;$filter&#x3D;name eq &#39;karbon-ntnx-1.0&#39; would filter the result on cluster name &#39;karbon-ntnx1.0&#39;, filter &#39;$filter&#x3D;startswith(name, &#39;C&#39;)&#39; would filter on cluster name starting with &#39;C&#39;. The filter can be applied to the following fields: - extId - key - ownerUuid - type - value 
  # @option opts [String] :orderby A URL query parameter that allows clients to specify the sort criteria for the returned list of objects. Resources can be sorted in ascending order using asc or descending order using desc. If asc or desc are not specified, the resources will be sorted in ascending order by default. For example, &#39;$orderby&#x3D;templateName desc&#39; would get all templates sorted by templateName in descending order. The orderby can be applied to the following fields: - key - value 
  # @option opts [String] :expand A URL query parameter that allows clients to request related resources when a resource that satisfies a particular request is retrieved. Each expanded item is evaluated relative to the entity containing the property being expanded. Other query options can be applied to an expanded property by appending a semicolon-separated list of query options, enclosed in parentheses, to the property name. Permissible system query options are $filter, $select and $orderby. The following expansion keys are supported. - associations - detailedAssociations 
  # @option opts [String] :select A URL query parameter that allows clients to request a specific set of properties for each entity or complex type. Expression specified with the $select must conform to the [OData V4.01](https://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html) URL conventions. If a $select expression consists of a single select item that is an asterisk (i.e., *), then all properties on the matching resource will be returned. - description - extId - key - ownerUuid - type - value 
  # @return [ListCategories200Response]
  describe 'list_categories test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_category_by_id
  # Update a category 
  # Updates the description, value, and owner properties of a category. 
  # @param ext_id A globally unique identifier of an instance that is suitable for external consumption. 
  # @param if_match The If-Match request header makes the request conditional. When not provided, the server will respond with  an HTTP-428 (Precondition Required) response code indicating that the server requires the request to be conditional. The server will allow the successful completion of PUT and PATCH operations, if the resource matches the ETag value returned to the response of a GET operation. If the conditional does not match, then an HTTP-412 (Precondition Failed) response will be returned.
  # @param prism_v40_config_category 
  # @param [Hash] opts the optional parameters
  # @return [UpdateCategoryById200Response]
  describe 'update_category_by_id test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
